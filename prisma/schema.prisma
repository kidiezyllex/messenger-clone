datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}
generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

model Hotel {
  id                  Int      @id @default(autoincrement()) // Tự động tăng
  userId              String
  title               String   @db.Text
  description         String  
  image               String
  provinces           String
  districts           String
  locationDescription String  
  gym                 Boolean  @default(false)
  spa                 Boolean  @default(false)
  bar                 Boolean  @default(false)
  laundry             Boolean  @default(false)
  restaurant          Boolean  @default(false)
  shopping            Boolean  @default(false)
  freeParking         Boolean  @default(false)
  bikeRental          Boolean  @default(false)
  freeWifi            Boolean  @default(false)
  movieNights         Boolean  @default(false)
  swimmingPool        Boolean  @default(false)
  coffeeShop          Boolean  @default(false)
  addedAt             DateTime @default(now())
  updatedAt           DateTime @default(now())
  rooms               Room[]
  bookings            Booking[]
}

model Room {
  id            Int     @id @default(autoincrement()) // Tự động tăng
  title         String
  description   String  
  bedCount      Int     @default(0)
  guestCount    Int     @default(0)
  bathroomCount Int     @default(0)
  kingBed       Int     @default(0)
  queenBed      Int     @default(0)
  image         String
  breakFastPrice Int
  roomPrice     Int
  roomService   Boolean @default(false)
  tv            Boolean @default(false)
  balcony       Boolean @default(false)
  freeWifi      Boolean @default(false)
  cityView      Boolean @default(false)
  oceanView     Boolean @default(false)
  forestView    Boolean @default(false)
  mountainView  Boolean @default(false)
  airCondition  Boolean @default(false)
  soundProofed  Boolean @default(false)
  hotelId       Int
  Hotel         Hotel?  @relation(fields: [hotelId], references: [id], onDelete: Cascade)
  Booking       Booking[]

  @@index([hotelId])
}

model Booking {
  id                  Int      @id @default(autoincrement()) // Tự động tăng
  userName            String 
  userEmail           String 
  userId              String 
  roomId              Int 
  hotelId             Int 
  hotelOwnerId        String
  startDate           DateTime 
  endDate             DateTime
  breakFastIncluded   Boolean 
  currency            String 
  totalPrice          Int 
  paymentStatus       Boolean @default(false) 
  paymentIntentId     String  @unique 
  bookedAt            DateTime @default(now()) 
  Hotel               Hotel?  @relation(fields: [hotelId], references: [id])
  Room                Room?   @relation(fields: [roomId], references: [id]) 

  @@index([hotelId])
  @@index([roomId])
}


